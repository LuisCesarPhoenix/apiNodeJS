Passo a passo para enviar o projeto do VS Code para o GitHub e sincronizar as alterações.

Pré-requisitos:
a) Conta no GitHub: Se você ainda não tem uma, crie uma conta gratuita em github.com.
b) Git instalado: O Git é essencial para controlar as versões do seu código. Você pode baixá-lo em git-scm.com.
c) VS Code instalado: Certifique-se de ter o Visual Studio Code instalado no seu computador.
d) Extensão GitHub: Instale a extensão "GitHub Pull Requests and Issues" no VS Code para facilitar a integração com o GitHub.

Passo 1: Criar um repositório no GitHub
a) Acesse sua conta no GitHub e clique no botão "New" (Novo) para criar um novo repositório.
b) Dê um nome ao seu repositório (por exemplo, "meu-projeto").
c) Você pode adicionar uma descrição opcional.
d) Escolha se o repositório será público ou privado.
e) Marque a opção "Add a README file" (Adicionar um arquivo README) para criar um arquivo de documentação inicial.
f) Clique em "Create repository" (Criar repositório).

Passo 2: Inicializar o Git no seu projeto (VS Code)
a) Abra a pasta do seu projeto no VS Code.
b) Abra o terminal integrado do VS Code (Visualizar > Terminal).
c) No terminal, execute o comando git init para inicializar um repositório Git local.
d) git config --global user.email "cesarrodriguesgoncalves@hotmail.com"
e) git config --global user.name "LuisCesarPhoenix"
Observação:
O --global define essa configuração para todos os repositórios no seu computador.
Se quiser configurar apenas para um projeto específico, remova --global e execute dentro da pasta do projeto.

Passo 3: Adicionar e commitar os arquivos
a) Use o comando git add . para adicionar todos os arquivos do seu projeto à área de preparação do Git.
b) Use o comando git commit -m "Mensagem inicial do commit" para criar um commit com seus arquivos. Substitua "Mensagem inicial do 
commit" por uma mensagem descritiva.

Passo 4: Conectar o repositório local ao repositório remoto (GitHub)
a) No seu repositório no GitHub, copie a URL do repositório (HTTPS ou SSH).
b) No terminal do VS Code, execute o comando git remote add origin https://github.com/LuisCesarPhoenix/apiNodeJs.git

Passo 5: Enviar os arquivos para o GitHub
a) Use o comando git push -u origin master para enviar seus commits para o repositório remoto no GitHub.

Passo 6: Sincronizar alterações futuras
1-Sempre que você fizer alterações no seu código no VS Code:
a) Use git add . para adicionar as alterações.
b) Use git commit -m "Mensagem descritiva das alterações" para criar um novo commit.
c) Use git push para enviar as alterações para o GitHub.

Dicas adicionais:
-Arquivo .gitignore: Crie um arquivo .gitignore na raiz do seu projeto para ignorar arquivos e pastas que você não quer enviar para 
o 
GitHub (por exemplo, arquivos de configuração, pastas de dependências).
-Branches: Use branches para desenvolver novas funcionalidades ou corrigir bugs sem afetar a versão principal do seu código.
-Pull requests: Use pull requests para revisar e discutir as alterações antes de mesclá-las à branch principal.
